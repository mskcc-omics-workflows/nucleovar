Changes in module 'nf-core/bcftools/annotate'
--- modules/nf-core/bcftools/annotate/main.nf
+++ modules/nf-core/bcftools/annotate/main.nf
@@ -4,11 +4,12 @@
 
     conda "${moduleDir}/environment.yml"
     container "${ workflow.containerEngine == 'singularity' && !task.ext.singularity_pull_docker_container ?
-        'https://depot.galaxyproject.org/singularity/bcftools:1.18--h8b25389_0':
-        'biocontainers/bcftools:1.18--h8b25389_0' }"
+        'ghcr.io/msk-access/bcftools:1.15.1':
+        'ghcr.io/msk-access/bcftools:1.15.1' }"
 
     input:
-    tuple val(meta), path(input), path(index), path(annotations), path(annotations_index), path(header_lines)
+    tuple val(meta), path(mutect_vcf), path(combined_vcf)
+    path(header_file)
 
     output:
     tuple val(meta), path("*.{vcf,vcf.gz,bcf,bcf.gz}"), emit: vcf
@@ -20,23 +21,13 @@
     script:
     def args    = task.ext.args ?: ''
     def prefix  = task.ext.prefix ?: "${meta.id}"
-    def header_file = header_lines ? "--header-lines ${header_lines}" : ''
-    def annotations_file = annotations ? "--annotations ${annotations}" : ''
-    def extension = args.contains("--output-type b") || args.contains("-Ob") ? "bcf.gz" :
-                    args.contains("--output-type u") || args.contains("-Ou") ? "bcf" :
-                    args.contains("--output-type z") || args.contains("-Oz") ? "vcf.gz" :
-                    args.contains("--output-type v") || args.contains("-Ov") ? "vcf" :
-                    "vcf"
-    if ("$input" == "${prefix}.${extension}") error "Input and output names are the same, set prefix in module configuration to disambiguate!"
+    
     """
-    bcftools \\
-        annotate \\
-        $args \\
-        $annotations_file \\
-        $header_file \\
-        --output ${prefix}.${extension} \\
-        --threads $task.cpus \\
-        $input
+    bcftools index --threads $task.cpus ${mutect_vcf}
+    bcftools index --threads $task.cpus ${combined_vcf}
+
+
+    bcftools annotate --header-lines ${header_file} --annotations ${mutect_vcf} --mark-sites +MUTECT --output-type v --output ${prefix}_annotated.vcf ${combined_vcf}
 
     cat <<-END_VERSIONS > versions.yml
     "${task.process}":
@@ -47,13 +38,9 @@
     stub:
     def args = task.ext.args ?: ''
     def prefix = task.ext.prefix ?: "${meta.id}"
-    def extension = args.contains("--output-type b") || args.contains("-Ob") ? "bcf.gz" :
-                    args.contains("--output-type u") || args.contains("-Ou") ? "bcf" :
-                    args.contains("--output-type z") || args.contains("-Oz") ? "vcf.gz" :
-                    args.contains("--output-type v") || args.contains("-Ov") ? "vcf" :
-                    "vcf"
+
     """
-    touch ${prefix}.${extension}
+    touch ${prefix}.vcf
 
     cat <<-END_VERSIONS > versions.yml
     "${task.process}":

************************************************************
