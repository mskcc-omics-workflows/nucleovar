/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Nextflow config file for running minimal tests
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Defines input files and everything required to run a fast and simple pipeline test.

    Use as follows:
        nextflow run msk/nucleovar -profile test,<docker/singularity> --outdir <OUTDIR>

----------------------------------------------------------------------------------------
*/

params {
    config_profile_name        = 'Test profile'
    config_profile_description = 'Minimal test dataset to check pipeline function'

    // Limit resources so that this can run on GitHub Actions
    max_cpus   = 2
    max_memory = '6.GB'
    max_time   = '6.h'

    // Input data
    input = '/home/buehlere/input_2'
    rules_json = '/home/naidur/snvs_indels/resources/v1.0/example_rules.json'
    aux_bams = '/home/buehlere/aux_bams_2'
    fasta = '/juno/cmo/access/production/resources/reference/current/Homo_sapiens_assembly19.fasta'
    fai = '/juno/cmo/access/production/resources/reference/current/Homo_sapiens_assembly19.fasta.fai'
    canonical_bed = '/juno/cmo/access/production/resources/msk-access/v1.0/regions_of_interest/versions/v1.0/MSK-ACCESS-v1_0panelA_canonicaltargets_500buffer.bed'
    target_bed = '/juno/cmo/access/production/resources/msk-access/v1.0/regions_of_interest/versions/v1.0/MSK-ACCESS-v1_0panelA_canonicaltargets_500buffer.bed'
    dict = '/juno/cmo/access/production/resources/reference/current/Homo_sapiens_assembly19.dict'
    sample_order_file = "/juno/cmo/access/production/resources/nucleovar/sample_order.txt"
    header_file = "/juno/cmo/access/production/resources/nucleovar/mutect_annotate_concat_header.txt"
    blocklist = "/juno/cmo/access/production/resources/nucleovar/access_blocklist.txt"
    canonical_tx_ref = "/juno/cmo/access/production/resources/nucleovar/canonical_target_tx_ref.tsv"
    hotspots = "/juno/cmo/access/production/resources/nucleovar/hotspots.maf"
    annotator = 'genomenexus'
}
